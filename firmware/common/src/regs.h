//////////////////////////////////////////////////////////////////////////////
// This file is part of 'CPIX Development Firmware'.
// It is subject to the license terms in the LICENSE.txt file found in the 
// top-level directory of this distribution and at: 
//    https://confluence.slac.stanford.edu/display/ppareg/LICENSE.html. 
// No part of 'CPIX Development Firmware', including this file, 
// may be copied, modified, propagated, or distributed except according to 
// the terms contained in the LICENSE.txt file.
//////////////////////////////////////////////////////////////////////////////
#include "sadc_delays.h"

#define BUS_OFFSET         (0x80000000)

#define POWER_OFFSET       (BUS_OFFSET+0x01000000)
#define POWER_ENABLE       (POWER_OFFSET+0x0)
#define DCDCA_M6V0         (1<<0)
#define DCDCA_P5V4         (1<<1)
#define DCDCA_P3V7         (1<<2)
#define DCDCA_P2V3         (1<<3)
#define DCDCA_P1V6         (1<<4)
#define LDO_SLOW           (1<<5)
#define LDO_FAST           (1<<6)
#define LDO_AM5V0          (1<<7)
#define POWER_SADC_RST     (POWER_OFFSET+0x200)
#define POWER_SADC_CTRL1   (POWER_OFFSET+0x204)
#define POWER_SADC_CTRL2   (POWER_OFFSET+0x208)
#define POWER_SADC_AMPEN   (POWER_OFFSET+0x20C)


#define SPIMASTER_OFFSET   (BUS_OFFSET+0x03400000)
#define ADC0_CONF_OFFSET   (SPIMASTER_OFFSET+0x0)
#define ADC1_CONF_OFFSET   (SPIMASTER_OFFSET+0x200)
#define ADC2_CONF_OFFSET   (SPIMASTER_OFFSET+0x400)
#define ADC3_CONF_OFFSET   (SPIMASTER_OFFSET+0x600)
const uint32_t adcAddrOffset[] = {
   ADC0_CONF_OFFSET, ADC1_CONF_OFFSET, ADC2_CONF_OFFSET, ADC3_CONF_OFFSET
};

#define ADC0_RDOUT_OFFSET  (BUS_OFFSET+0x03000000)
#define ADC0_ALANE0_DELAY  (ADC0_RDOUT_OFFSET+0x200)
#define ADC0_ALANE1_DELAY  (ADC0_RDOUT_OFFSET+0x204)
#define ADC0_ALANE2_DELAY  (ADC0_RDOUT_OFFSET+0x208)
#define ADC0_ALANE3_DELAY  (ADC0_RDOUT_OFFSET+0x20C)
#define ADC0_ALANE4_DELAY  (ADC0_RDOUT_OFFSET+0x210)
#define ADC0_ALANE5_DELAY  (ADC0_RDOUT_OFFSET+0x214)
#define ADC0_ALANE6_DELAY  (ADC0_RDOUT_OFFSET+0x218)
#define ADC0_ALANE7_DELAY  (ADC0_RDOUT_OFFSET+0x21C)
#define ADC0_BLANE0_DELAY  (ADC0_RDOUT_OFFSET+0x220)
#define ADC0_BLANE1_DELAY  (ADC0_RDOUT_OFFSET+0x224)
#define ADC0_BLANE2_DELAY  (ADC0_RDOUT_OFFSET+0x228)
#define ADC0_BLANE3_DELAY  (ADC0_RDOUT_OFFSET+0x22C)
#define ADC0_BLANE4_DELAY  (ADC0_RDOUT_OFFSET+0x230)
#define ADC0_BLANE5_DELAY  (ADC0_RDOUT_OFFSET+0x234)
#define ADC0_BLANE6_DELAY  (ADC0_RDOUT_OFFSET+0x238)
#define ADC0_BLANE7_DELAY  (ADC0_RDOUT_OFFSET+0x23C)
#define ADC0_RDOUT_DMODE   (ADC0_RDOUT_OFFSET+0x240)
#define ADC0_RDOUT_INVERT  (ADC0_RDOUT_OFFSET+0x244)
#define ADC0_RDOUT_CONVERT (ADC0_RDOUT_OFFSET+0x248)

#define ADC1_RDOUT_OFFSET  (BUS_OFFSET+0x03100000)
#define ADC1_ALANE0_DELAY  (ADC1_RDOUT_OFFSET+0x200)
#define ADC1_ALANE1_DELAY  (ADC1_RDOUT_OFFSET+0x204)
#define ADC1_ALANE2_DELAY  (ADC1_RDOUT_OFFSET+0x208)
#define ADC1_ALANE3_DELAY  (ADC1_RDOUT_OFFSET+0x20C)
#define ADC1_ALANE4_DELAY  (ADC1_RDOUT_OFFSET+0x210)
#define ADC1_ALANE5_DELAY  (ADC1_RDOUT_OFFSET+0x214)
#define ADC1_ALANE6_DELAY  (ADC1_RDOUT_OFFSET+0x218)
#define ADC1_ALANE7_DELAY  (ADC1_RDOUT_OFFSET+0x21C)
#define ADC1_BLANE0_DELAY  (ADC1_RDOUT_OFFSET+0x220)
#define ADC1_BLANE1_DELAY  (ADC1_RDOUT_OFFSET+0x224)
#define ADC1_BLANE2_DELAY  (ADC1_RDOUT_OFFSET+0x228)
#define ADC1_BLANE3_DELAY  (ADC1_RDOUT_OFFSET+0x22C)
#define ADC1_BLANE4_DELAY  (ADC1_RDOUT_OFFSET+0x230)
#define ADC1_BLANE5_DELAY  (ADC1_RDOUT_OFFSET+0x234)
#define ADC1_BLANE6_DELAY  (ADC1_RDOUT_OFFSET+0x238)
#define ADC1_BLANE7_DELAY  (ADC1_RDOUT_OFFSET+0x23C)
#define ADC1_RDOUT_DMODE   (ADC1_RDOUT_OFFSET+0x240)
#define ADC1_RDOUT_INVERT  (ADC1_RDOUT_OFFSET+0x244)
#define ADC1_RDOUT_CONVERT (ADC1_RDOUT_OFFSET+0x248)

#define ADC2_RDOUT_OFFSET  (BUS_OFFSET+0x03200000)
#define ADC2_ALANE0_DELAY  (ADC2_RDOUT_OFFSET+0x200)
#define ADC2_ALANE1_DELAY  (ADC2_RDOUT_OFFSET+0x204)
#define ADC2_ALANE2_DELAY  (ADC2_RDOUT_OFFSET+0x208)
#define ADC2_ALANE3_DELAY  (ADC2_RDOUT_OFFSET+0x20C)
#define ADC2_ALANE4_DELAY  (ADC2_RDOUT_OFFSET+0x210)
#define ADC2_ALANE5_DELAY  (ADC2_RDOUT_OFFSET+0x214)
#define ADC2_ALANE6_DELAY  (ADC2_RDOUT_OFFSET+0x218)
#define ADC2_ALANE7_DELAY  (ADC2_RDOUT_OFFSET+0x21C)
#define ADC2_BLANE0_DELAY  (ADC2_RDOUT_OFFSET+0x220)
#define ADC2_BLANE1_DELAY  (ADC2_RDOUT_OFFSET+0x224)
#define ADC2_BLANE2_DELAY  (ADC2_RDOUT_OFFSET+0x228)
#define ADC2_BLANE3_DELAY  (ADC2_RDOUT_OFFSET+0x22C)
#define ADC2_BLANE4_DELAY  (ADC2_RDOUT_OFFSET+0x230)
#define ADC2_BLANE5_DELAY  (ADC2_RDOUT_OFFSET+0x234)
#define ADC2_BLANE6_DELAY  (ADC2_RDOUT_OFFSET+0x238)
#define ADC2_BLANE7_DELAY  (ADC2_RDOUT_OFFSET+0x23C)
#define ADC2_RDOUT_DMODE   (ADC2_RDOUT_OFFSET+0x240)
#define ADC2_RDOUT_INVERT  (ADC2_RDOUT_OFFSET+0x244)
#define ADC2_RDOUT_CONVERT (ADC2_RDOUT_OFFSET+0x248)

#define ADC3_RDOUT_OFFSET  (BUS_OFFSET+0x03300000)
#define ADC3_ALANE0_DELAY  (ADC3_RDOUT_OFFSET+0x200)
#define ADC3_ALANE1_DELAY  (ADC3_RDOUT_OFFSET+0x204)
#define ADC3_ALANE2_DELAY  (ADC3_RDOUT_OFFSET+0x208)
#define ADC3_ALANE3_DELAY  (ADC3_RDOUT_OFFSET+0x20C)
#define ADC3_ALANE4_DELAY  (ADC3_RDOUT_OFFSET+0x210)
#define ADC3_ALANE5_DELAY  (ADC3_RDOUT_OFFSET+0x214)
#define ADC3_ALANE6_DELAY  (ADC3_RDOUT_OFFSET+0x218)
#define ADC3_ALANE7_DELAY  (ADC3_RDOUT_OFFSET+0x21C)
#define ADC3_BLANE0_DELAY  (ADC3_RDOUT_OFFSET+0x220)
#define ADC3_BLANE1_DELAY  (ADC3_RDOUT_OFFSET+0x224)
#define ADC3_BLANE2_DELAY  (ADC3_RDOUT_OFFSET+0x228)
#define ADC3_BLANE3_DELAY  (ADC3_RDOUT_OFFSET+0x22C)
#define ADC3_BLANE4_DELAY  (ADC3_RDOUT_OFFSET+0x230)
#define ADC3_BLANE5_DELAY  (ADC3_RDOUT_OFFSET+0x234)
#define ADC3_BLANE6_DELAY  (ADC3_RDOUT_OFFSET+0x238)
#define ADC3_BLANE7_DELAY  (ADC3_RDOUT_OFFSET+0x23C)
#define ADC3_RDOUT_DMODE   (ADC3_RDOUT_OFFSET+0x240)
#define ADC3_RDOUT_INVERT  (ADC3_RDOUT_OFFSET+0x244)
#define ADC3_RDOUT_CONVERT (ADC3_RDOUT_OFFSET+0x248)
const uint32_t adcDmodeRegs[] = {
   ADC0_RDOUT_DMODE, ADC1_RDOUT_DMODE, ADC2_RDOUT_DMODE, ADC3_RDOUT_DMODE
};
const uint32_t adcInvertRegs[] = {
   ADC0_RDOUT_INVERT, ADC1_RDOUT_INVERT, ADC2_RDOUT_INVERT, ADC3_RDOUT_INVERT
};
const uint32_t adcConvertRegs[] = {
   ADC0_RDOUT_CONVERT, ADC1_RDOUT_CONVERT, ADC2_RDOUT_CONVERT, ADC3_RDOUT_CONVERT
};
const uint32_t adcLaneDelayRegs[] = {
   ADC0_ALANE0_DELAY, ADC0_ALANE1_DELAY, ADC0_ALANE2_DELAY, ADC0_ALANE3_DELAY,
   ADC0_ALANE4_DELAY, ADC0_ALANE5_DELAY, ADC0_ALANE6_DELAY, ADC0_ALANE7_DELAY,
   ADC0_BLANE0_DELAY, ADC0_BLANE1_DELAY, ADC0_BLANE2_DELAY, ADC0_BLANE3_DELAY,
   ADC0_BLANE4_DELAY, ADC0_BLANE5_DELAY, ADC0_BLANE6_DELAY, ADC0_BLANE7_DELAY,
   ADC1_ALANE0_DELAY, ADC1_ALANE1_DELAY, ADC1_ALANE2_DELAY, ADC1_ALANE3_DELAY,
   ADC1_ALANE4_DELAY, ADC1_ALANE5_DELAY, ADC1_ALANE6_DELAY, ADC1_ALANE7_DELAY,
   ADC1_BLANE0_DELAY, ADC1_BLANE1_DELAY, ADC1_BLANE2_DELAY, ADC1_BLANE3_DELAY,
   ADC1_BLANE4_DELAY, ADC1_BLANE5_DELAY, ADC1_BLANE6_DELAY, ADC1_BLANE7_DELAY,
   ADC2_ALANE0_DELAY, ADC2_ALANE1_DELAY, ADC2_ALANE2_DELAY, ADC2_ALANE3_DELAY,
   ADC2_ALANE4_DELAY, ADC2_ALANE5_DELAY, ADC2_ALANE6_DELAY, ADC2_ALANE7_DELAY,
   ADC2_BLANE0_DELAY, ADC2_BLANE1_DELAY, ADC2_BLANE2_DELAY, ADC2_BLANE3_DELAY,
   ADC2_BLANE4_DELAY, ADC2_BLANE5_DELAY, ADC2_BLANE6_DELAY, ADC2_BLANE7_DELAY,
   ADC3_ALANE0_DELAY, ADC3_ALANE1_DELAY, ADC3_ALANE2_DELAY, ADC3_ALANE3_DELAY,
   ADC3_ALANE4_DELAY, ADC3_ALANE5_DELAY, ADC3_ALANE6_DELAY, ADC3_ALANE7_DELAY,
   ADC3_BLANE0_DELAY, ADC3_BLANE1_DELAY, ADC3_BLANE2_DELAY, ADC3_BLANE3_DELAY,
   ADC3_BLANE4_DELAY, ADC3_BLANE5_DELAY, ADC3_BLANE6_DELAY, ADC3_BLANE7_DELAY
};

const uint32_t adcLaneDelayInit[] = {
   SADC0_LANE0, SADC0_LANE1, SADC0_LANE2, SADC0_LANE3,
   SADC0_LANE4, SADC0_LANE5, SADC0_LANE6, SADC0_LANE7,
   SADC1_LANE0, SADC1_LANE1, SADC1_LANE2, SADC1_LANE3,
   SADC1_LANE4, SADC1_LANE5, SADC1_LANE6, SADC1_LANE7,
   SADC2_LANE0, SADC2_LANE1, SADC2_LANE2, SADC2_LANE3,
   SADC2_LANE4, SADC2_LANE5, SADC2_LANE6, SADC2_LANE7,
   SADC3_LANE0, SADC3_LANE1, SADC3_LANE2, SADC3_LANE3,
   SADC3_LANE4, SADC3_LANE5, SADC3_LANE6, SADC3_LANE7,
   SADC4_LANE0, SADC4_LANE1, SADC4_LANE2, SADC4_LANE3,
   SADC4_LANE4, SADC4_LANE5, SADC4_LANE6, SADC4_LANE7,
   SADC5_LANE0, SADC5_LANE1, SADC5_LANE2, SADC5_LANE3,
   SADC5_LANE4, SADC5_LANE5, SADC5_LANE6, SADC5_LANE7,
   SADC6_LANE0, SADC6_LANE1, SADC6_LANE2, SADC6_LANE3,
   SADC6_LANE4, SADC6_LANE5, SADC6_LANE6, SADC6_LANE7,
   SADC7_LANE0, SADC7_LANE1, SADC7_LANE2, SADC7_LANE3,
   SADC7_LANE4, SADC7_LANE5, SADC7_LANE6, SADC7_LANE7
};

#define ADCTESTER_OFFSET   (BUS_OFFSET+0x04900000)
#define ADCTESTER_CHANNEL  (ADCTESTER_OFFSET+0x0)
#define ADCTESTER_MASK     (ADCTESTER_OFFSET+0x4)
#define ADCTESTER_PATTERN  (ADCTESTER_OFFSET+0x8)
#define ADCTESTER_SAMPLES  (ADCTESTER_OFFSET+0xC)
#define ADCTESTER_REQUEST  (ADCTESTER_OFFSET+0x10)
#define ADCTESTER_DONE     (ADCTESTER_OFFSET+0x14)
#define ADCTESTER_FAILED   (ADCTESTER_OFFSET+0x18)
#define ADCTESTER_COUNT    (ADCTESTER_OFFSET+0x1C)
